Given numRows, generate the first numRows of Pascal's triangle.

For example, given numRows = 5,
Return

[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]

solution:

public class Solution {
    public List<List<Integer>> generate(int numRows) {
        List<List<Integer>>lists= new ArrayList<>();
        if(numRows==0)
        return lists;
        List<Integer> list = new ArrayList<Integer>();
        list.add(1);
        lists.add(list);
        if(numRows==1)
        return lists;
        List<Integer> list2 = new ArrayList<Integer>();
        list2.add(1);
        list2.add(1);
        lists.add(list2);
        if(numRows==2)
        return lists;
        for(int i=3;i<=numRows;i++){
            
            List<Integer> temp = new ArrayList<Integer>();
            temp.add(1);
            //System.out.print(Integer.toString(lists.size()));
            //System.out.print("&"+Integer.toString(lists.get(i-2).size())+"&");
            for(int j=1;j<i-1;j++){
                
                temp.add(lists.get(i-2).get(j-1)+lists.get(i-2).get(j));
                //System.out.print(Integer.toString(lists.get(i-2).get(j-1)+lists.get(i-2).get(j))+"&");
            }
            temp.add(1);
            lists.add(temp);
            
        }
        return lists;
    }
}