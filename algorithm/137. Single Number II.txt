Given an array of integers, every element appears three times except for one. 
Find that single one.

Note:
Your algorithm should have a linear runtime complexity. 
Could you implement it without using extra memory?

Subscribe to see which companies asked this question

public class Solution {
    public int singleNumber(int[] nums) {
        int ans=0;
        int temp=1;
        int len = nums.length;
       
        for(int i=0;i<64;i++){
            
            int count = 0;
            for(int j=0;j<len;j++){
                int t=temp&nums[j];
                if(t!=0)
                count ++;
                
                
            }
            if(count%3!=0){
               //ans +=Math.pow(2,i); 
               ans |= temp;
            }
            
            temp=temp<<1;
           
        }
        return ans;
    }
}